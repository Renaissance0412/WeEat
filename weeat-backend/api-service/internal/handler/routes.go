// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"time"

	"api-service/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/asr/stream",
				Handler: ASRStreamHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/asr/sync",
				Handler: ASRSyncHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/llm/chat/stream",
				Handler: LLMStreamChatHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/llm/chat/sync",
				Handler: LLMSyncChatHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/rag/chat/stream",
				Handler: RAGStreamChatHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/rag/chat/sync",
				Handler: RAGSyncChatHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/rag/context",
				Handler: RAGCreateContextHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/rag/flush",
				Handler: RAGFlushContextHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/rag/user",
				Handler: RAGCreateUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/recognition",
				Handler: RecognitionHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
		rest.WithTimeout(60000*time.Millisecond),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: LoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)
}
