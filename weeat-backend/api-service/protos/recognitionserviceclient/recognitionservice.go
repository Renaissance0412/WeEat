// Code generated by goctl. DO NOT EDIT.
// Source: recognition_service.proto

package recognitionserviceclient

import (
	"context"

	"api-service/protos/recognitionservice"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	RecognitionRequest      = recognitionservice.RecognitionRequest
	RecognitionResponse     = recognitionservice.RecognitionResponse
	RecognitionResponseItem = recognitionservice.RecognitionResponseItem

	RecognitionService interface {
		// Recognize image and return recognition result
		Recognize(ctx context.Context, in *RecognitionRequest, opts ...grpc.CallOption) (*RecognitionResponse, error)
	}

	defaultRecognitionService struct {
		cli zrpc.Client
	}
)

func NewRecognitionService(cli zrpc.Client) RecognitionService {
	return &defaultRecognitionService{
		cli: cli,
	}
}

// Recognize image and return recognition result
func (m *defaultRecognitionService) Recognize(ctx context.Context, in *RecognitionRequest, opts ...grpc.CallOption) (*RecognitionResponse, error) {
	client := recognitionservice.NewRecognitionServiceClient(m.cli.Conn())
	return client.Recognize(ctx, in, opts...)
}
